version: '3.7'

services:
  sports_data_service_db:
    image: postgres:13-alpine3.14
    container_name: sports_data_service_db
    ports:
      - '54323:5432'
    environment:
      POSTGRES_DB: sports_data_service_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - sports_data_service_db:/var/lib/postgresql/data
    restart: unless-stopped

  sports_data_service_adminer:
    image: adminer
    container_name: sports_data_service_adminer
    depends_on:
      - sports_data_service_db
    ports:
      - '8881:8080'
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '22181:2181'
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CREATE_TOPICS: 'data-sending:1:1'
    restart: unless-stopped

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    restart: unless-stopped

volumes:
  sports_data_service_db:
